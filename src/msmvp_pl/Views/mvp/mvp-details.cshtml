@inherits Nancy.ViewEngines.Razor.NancyRazorViewBase<dynamic>
@{
    Layout = "_layout.cshtml";
}

@section Title{ @Model.FirstName @Model.LastName > }

<div class="mainBox">
    <div class="aboutBox">
    @if (Model.PhotoFile != null)
    {
        <img src="@Url.Content("~/assets/img/photos/" + @Model.PhotoFile)" alt="@Model.FirstName @Model.LastName"/>
    }
    else
    {
        <img src="@Url.Content("~/assets/img/person.png")" alt="@Model.FirstName @Model.LastName"/>
    }
    </div>
    <div class="infoBox">
        <h2>@Model.FirstName<br />@Model.LastName</h2>	
        <p>@Html.Raw(@Model.Bio)</p>
    </div>
@*
this condition ensures that contents is really fetched
during testing there was a situation where MVP had no Nominations, but had 1 object in the collection (with null start date)
*@
@if (@Model.Nominations.Count > 0 && @Model.Nominations.First().StartDate != null)
{
    <div class="infoBox">
        <h2>Nominacje</h2>	
        @foreach (var nomination in @Model.Nominations)
        {
        <p>
            @nomination.StartDate.ToString("yyyy-MM")
            -
            @(nomination.EndDate == null ? "?" : nomination.EndDate.ToString("yyyy-MM"))
            (@nomination.Category)
        </p>
        }
    </div>
}

@*
this condition ensures that contents is really fetched
during testing there was a situation where MVP had no links, but had 1 object in the collection (with null title and text)
*@
@if (@Model.Links.Count > 0 && @Model.Links.First().Value != null)
{
    <div class="infoBox">
        <h2>Linki</h2>	
        <p>
        @foreach (var link in @Model.Links)
        {
            @if (@link.Name != null)
            {
                @link.Name@::
            }
            <span style="white-space: nowrap">@Html.Raw(link.Value)</span>
            <br />
        }
        </p>
    </div>
}

    <div class="clearfix"></div>
    <div class="hr"><hr /></div>
</div>

@*
this condition ensures that contents is really fetched
during testing there was a situation where MVP had no contents, but had 1 object in the collection (with null title and text)
*@

@if (@Model.Contents.Count > 0 && @Model.Contents.First().Title != null)
{
<div class="historyBox">
    @foreach (var content in @Model.Contents)
    {
    <a href="#" rel="content-@Model.StringSlug(@content.Title)" @if (content == Model.Contents.First())
        {
            <text>class="personBtn personBtnSelected"</text>
        }
        else
        {
            <text>class="personBtn"</text>
        }>
        @content.Title
    </a>
    }
</div>

<div class="personText">
@foreach (var content in @Model.Contents)
{
<div @if (content == Model.Contents.First())
        {
            <text>class="personTextContent personTextSelected"</text>
        }
        else
        {
            <text>class="personTextContent personTextNotselected"</text>
        } id="content-@Model.StringSlug(@content.Title)">
    @Html.Raw(content.Text)
</div>
}
</div>
}

@section twitter
{
    <div id="twitter-profile"></div>
}

@section scripts
{
    <script type="text/javascript">

        $(function () {

            var elem = $('#twitter-profile'), widget;

            if (elem.length > 0) {
                
                $.getJSON('@Url.Content("~/twitter/" + Model.Slug)', function (data) {
                    if (data.Twitter) {
                        widget = new TWTR.Widget({
                            id: 'twitter-profile',
                            version: 2,
                            type: 'profile',
                            rpp: 10,
                            interval: 30000,
                            width: 220,
                            height: 180,
                            theme: {
                                shell: {
                                    background: '#00aeef',
                                    color: '#ffffff'
                                },
                                tweets: {
                                    background: '#ffffff',
                                    color: '#444444',
                                    links: '#1985b5'
                                }
                            },
                            features: {
                                scrollbar: true,
                                loop: false,
                                live: true,
                                behavior: 'all'
                            }
                        });

                        widget.render();
                        widget.setUser(data.Twitter);
                        widget.start();
                    } else {
                        elem.hide();
                    }
                });
            }

        $('.personBtn').click(function () {
            var slug = this.rel;
            var item = $('#' + slug);
            
            if (item && item.is(':visible')) {
                return false;
            }
            $('.personTextContent').hide('slow');
            item.show('slow');
            $('.personBtn').removeClass('personBtnSelected');
            $(this).addClass('personBtnSelected');

            return false;
        });
    });

    </script>
}