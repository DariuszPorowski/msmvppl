//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("msmvp_dataModel", "contents_mvps", "mvps", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataEntryApp.mvps), "contents", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataEntryApp.contents), true)]
[assembly: EdmRelationshipAttribute("msmvp_dataModel", "links_mvps", "mvps", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataEntryApp.mvps), "links", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataEntryApp.links), true)]
[assembly: EdmRelationshipAttribute("msmvp_dataModel", "nominations_mvps", "mvps", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataEntryApp.mvps), "nominations", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataEntryApp.nominations), true)]

#endregion

namespace DataEntryApp
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class msmvp_dataEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new msmvp_dataEntities object using the connection string found in the 'msmvp_dataEntities' section of the application configuration file.
        /// </summary>
        public msmvp_dataEntities() : base("name=msmvp_dataEntities", "msmvp_dataEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new msmvp_dataEntities object.
        /// </summary>
        public msmvp_dataEntities(string connectionString) : base(connectionString, "msmvp_dataEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new msmvp_dataEntities object.
        /// </summary>
        public msmvp_dataEntities(EntityConnection connection) : base(connection, "msmvp_dataEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<contents> contents
        {
            get
            {
                if ((_contents == null))
                {
                    _contents = base.CreateObjectSet<contents>("contents");
                }
                return _contents;
            }
        }
        private ObjectSet<contents> _contents;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<links> links
        {
            get
            {
                if ((_links == null))
                {
                    _links = base.CreateObjectSet<links>("links");
                }
                return _links;
            }
        }
        private ObjectSet<links> _links;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<mvps> mvps
        {
            get
            {
                if ((_mvps == null))
                {
                    _mvps = base.CreateObjectSet<mvps>("mvps");
                }
                return _mvps;
            }
        }
        private ObjectSet<mvps> _mvps;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<nominations> nominations
        {
            get
            {
                if ((_nominations == null))
                {
                    _nominations = base.CreateObjectSet<nominations>("nominations");
                }
                return _nominations;
            }
        }
        private ObjectSet<nominations> _nominations;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the contents EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTocontents(contents contents)
        {
            base.AddObject("contents", contents);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the links EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTolinks(links links)
        {
            base.AddObject("links", links);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the mvps EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTomvps(mvps mvps)
        {
            base.AddObject("mvps", mvps);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the nominations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTonominations(nominations nominations)
        {
            base.AddObject("nominations", nominations);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="msmvp_dataModel", Name="contents")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class contents : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new contents object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="text">Initial value of the Text property.</param>
        /// <param name="mvpId">Initial value of the MvpId property.</param>
        public static contents Createcontents(global::System.Int32 id, global::System.String title, global::System.String text, global::System.Int32 mvpId)
        {
            contents contents = new contents();
            contents.Id = id;
            contents.Title = title;
            contents.Text = text;
            contents.MvpId = mvpId;
            return contents;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MvpId
        {
            get
            {
                return _MvpId;
            }
            set
            {
                OnMvpIdChanging(value);
                ReportPropertyChanging("MvpId");
                _MvpId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MvpId");
                OnMvpIdChanged();
            }
        }
        private global::System.Int32 _MvpId;
        partial void OnMvpIdChanging(global::System.Int32 value);
        partial void OnMvpIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("msmvp_dataModel", "contents_mvps", "mvps")]
        public mvps mvps
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<mvps>("msmvp_dataModel.contents_mvps", "mvps").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<mvps>("msmvp_dataModel.contents_mvps", "mvps").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<mvps> mvpsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<mvps>("msmvp_dataModel.contents_mvps", "mvps");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<mvps>("msmvp_dataModel.contents_mvps", "mvps", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="msmvp_dataModel", Name="links")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class links : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new links object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        /// <param name="mvpId">Initial value of the MvpId property.</param>
        public static links Createlinks(global::System.Int32 id, global::System.String value, global::System.Int32 mvpId)
        {
            links links = new links();
            links.Id = id;
            links.Value = value;
            links.MvpId = mvpId;
            return links;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MvpId
        {
            get
            {
                return _MvpId;
            }
            set
            {
                OnMvpIdChanging(value);
                ReportPropertyChanging("MvpId");
                _MvpId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MvpId");
                OnMvpIdChanged();
            }
        }
        private global::System.Int32 _MvpId;
        partial void OnMvpIdChanging(global::System.Int32 value);
        partial void OnMvpIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("msmvp_dataModel", "links_mvps", "mvps")]
        public mvps mvps
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<mvps>("msmvp_dataModel.links_mvps", "mvps").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<mvps>("msmvp_dataModel.links_mvps", "mvps").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<mvps> mvpsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<mvps>("msmvp_dataModel.links_mvps", "mvps");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<mvps>("msmvp_dataModel.links_mvps", "mvps", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="msmvp_dataModel", Name="mvps")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class mvps : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new mvps object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="slug">Initial value of the Slug property.</param>
        public static mvps Createmvps(global::System.Int32 id, global::System.String firstName, global::System.String lastName, global::System.String slug)
        {
            mvps mvps = new mvps();
            mvps.Id = id;
            mvps.FirstName = firstName;
            mvps.LastName = lastName;
            mvps.Slug = slug;
            return mvps;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Slug
        {
            get
            {
                return _Slug;
            }
            set
            {
                OnSlugChanging(value);
                ReportPropertyChanging("Slug");
                _Slug = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Slug");
                OnSlugChanged();
            }
        }
        private global::System.String _Slug;
        partial void OnSlugChanging(global::System.String value);
        partial void OnSlugChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Bio
        {
            get
            {
                return _Bio;
            }
            set
            {
                OnBioChanging(value);
                ReportPropertyChanging("Bio");
                _Bio = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Bio");
                OnBioChanged();
            }
        }
        private global::System.String _Bio;
        partial void OnBioChanging(global::System.String value);
        partial void OnBioChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PhotoFile
        {
            get
            {
                return _PhotoFile;
            }
            set
            {
                OnPhotoFileChanging(value);
                ReportPropertyChanging("PhotoFile");
                _PhotoFile = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PhotoFile");
                OnPhotoFileChanged();
            }
        }
        private global::System.String _PhotoFile;
        partial void OnPhotoFileChanging(global::System.String value);
        partial void OnPhotoFileChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("msmvp_dataModel", "contents_mvps", "contents")]
        public EntityCollection<contents> contents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<contents>("msmvp_dataModel.contents_mvps", "contents");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<contents>("msmvp_dataModel.contents_mvps", "contents", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("msmvp_dataModel", "links_mvps", "links")]
        public EntityCollection<links> links
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<links>("msmvp_dataModel.links_mvps", "links");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<links>("msmvp_dataModel.links_mvps", "links", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("msmvp_dataModel", "nominations_mvps", "nominations")]
        public EntityCollection<nominations> nominations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<nominations>("msmvp_dataModel.nominations_mvps", "nominations");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<nominations>("msmvp_dataModel.nominations_mvps", "nominations", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="msmvp_dataModel", Name="nominations")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class nominations : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new nominations object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="mvpId">Initial value of the MvpId property.</param>
        /// <param name="startDate">Initial value of the StartDate property.</param>
        /// <param name="category">Initial value of the Category property.</param>
        public static nominations Createnominations(global::System.Int32 id, global::System.Int32 mvpId, global::System.DateTime startDate, global::System.String category)
        {
            nominations nominations = new nominations();
            nominations.Id = id;
            nominations.MvpId = mvpId;
            nominations.StartDate = startDate;
            nominations.Category = category;
            return nominations;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MvpId
        {
            get
            {
                return _MvpId;
            }
            set
            {
                OnMvpIdChanging(value);
                ReportPropertyChanging("MvpId");
                _MvpId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MvpId");
                OnMvpIdChanged();
            }
        }
        private global::System.Int32 _MvpId;
        partial void OnMvpIdChanging(global::System.Int32 value);
        partial void OnMvpIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private global::System.DateTime _StartDate;
        partial void OnStartDateChanging(global::System.DateTime value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDate;
        partial void OnEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Category
        {
            get
            {
                return _Category;
            }
            set
            {
                OnCategoryChanging(value);
                ReportPropertyChanging("Category");
                _Category = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Category");
                OnCategoryChanged();
            }
        }
        private global::System.String _Category;
        partial void OnCategoryChanging(global::System.String value);
        partial void OnCategoryChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("msmvp_dataModel", "nominations_mvps", "mvps")]
        public mvps mvps
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<mvps>("msmvp_dataModel.nominations_mvps", "mvps").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<mvps>("msmvp_dataModel.nominations_mvps", "mvps").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<mvps> mvpsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<mvps>("msmvp_dataModel.nominations_mvps", "mvps");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<mvps>("msmvp_dataModel.nominations_mvps", "mvps", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
